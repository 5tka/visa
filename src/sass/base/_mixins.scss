@mixin clearfix {
  &:after,
  &:before {
    content: "";
    display: table;
  }

  &:after {
    clear: both;
  }
}
@mixin container($mw, $p: 30) {
  max-width: $mw + ($p * 2) + px;
  min-width: 320px;
  margin: 0 auto;
  padding: {
    right: $p + px;
    left: $p + px;
  }
}
@mixin fz($px) {
  $maxwidth: ($maxwidth-container * 0.01) * 1px;
  font-size: $px;
  font-size: ($px / $maxwidth) * 1vw;
}
@mixin border-radius($radius: 5px) {
  -webkit-border-radius: $radius;
  -moz-border-radius: $radius;
  border-radius: $radius;
  -moz-background-clip: padding;
  -webkit-background-clip: padding-box;
  background-clip: padding-box;
}
@mixin box-shadow($string) {
  -webkit-box-shadow: $string;
  -moz-box-shadow: $string;
  box-shadow: $string;
}
@mixin transition($transition) {
  -webkit-transition: $transition;
  -moz-transition: $transition;
  -ms-transition: $transition;
  -o-transition: $transition;
  transition: $transition;
}
@mixin opacity($opacity: 1) {
  $ieOpacity: $opacity * 100;
  filter:  "alpha(opacity=$ieOpacity)";
  -ms-filter:  "progid:DXImageTransform.Microsoft.Alpha(Opacity=$ieOpacity)";
  opacity: $opacity;
}
@mixin placecolor($color: black) {
  &::-webkit-input-placeholder {
    color: $color;
  }

  &:-moz-placeholder {
    color: $color;
  }

  &::-moz-placeholder {
    color: $color;
  }

  &:-ms-input-placeholder {
    color: $color;
  }
}
@mixin transform($transforms) {
  -moz-transform: $transforms;
  -o-transform: $transforms;
  -ms-transform: $transforms;
  -webkit-transform: $transforms;
  transform: $transforms;
}
@mixin transform-origin ($origin) {
  moz-transform-origin: $origin;
  -o-transform-origin: $origin;
  -ms-transform-origin: $origin;
  -webkit-transform-origin: $origin;
  transform-origin: $origin;
}
@mixin breakpoint($width) {
   @media only screen and (max-width: ($width) + px){
    @content;
  }
}
